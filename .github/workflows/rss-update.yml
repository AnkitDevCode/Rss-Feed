name: Update RSS Feed
on:
  schedule:
    - cron: "0 */6 * * *"   # every 6 hours
  workflow_dispatch:        # manual trigger
jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install rss-parser
      - name: Generate latest articles (collapsible style)
        run: |
          node - <<'EOF'
          const fs = require('fs');
          const Parser = require('rss-parser');
          const parser = new Parser();
          const config = JSON.parse(fs.readFileSync('rss-feeds.json', 'utf8'));
          let markdownSections = [];
          let htmlSections = [];
          
          (async () => {
            for (const feed of config.feeds) {
              try {
                const parsed = await parser.parseURL(feed.url);
                
                // Generate markdown posts for README.md
                let markdownPosts = parsed.items.slice(0, 5).map(item => {
                  const date = item.pubDate || item.isoDate || "";
                  const formattedDate = date ? ` (${new Date(date).toISOString().split("T")[0]})` : "";
                  return `- [${item.title}](${item.link})${formattedDate}`;
                }).join("\n");
                
                // Generate HTML posts for index.html
                let htmlPosts = parsed.items.slice(0, 5).map(item => {
                  const date = item.pubDate || item.isoDate || "";
                  const formattedDate = date ? ` <span style="color: #666;">(${new Date(date).toISOString().split("T")[0]})</span>` : "";
                  return `    <li><a href="${item.link}" target="_blank">${item.title}</a>${formattedDate}</li>`;
                }).join("\n");
                
                // Markdown section for README.md
                markdownSections.push(
          `<details>
          <summary>${feed.icon || "üì∞"} ${feed.name}</summary>
          
          ${markdownPosts}
          
          </details>`
                );
                
                // HTML section for index.html
                htmlSections.push(
          `<details style="margin-bottom: 15px; border: 1px solid #ddd; border-radius: 5px; padding: 10px;">
            <summary style="cursor: pointer; font-weight: bold; padding: 5px; background: #f5f5f5; border-radius: 3px;">${feed.icon || "üì∞"} ${feed.name}</summary>
            <ul style="margin: 10px 0; padding-left: 20px;">
          ${htmlPosts}
            </ul>
          </details>`
                );
              } catch (e) {
                console.error(`‚ö†Ô∏è Failed to fetch: ${feed.url}`);
              }
            }
            
            // Update README.md with markdown
            if (fs.existsSync("README.md")) {
              let content = fs.readFileSync("README.md", "utf8");
              const start = "<!-- BLOG-POST-LIST:START -->";
              const end = "<!-- BLOG-POST-LIST:END -->";
              const regex = new RegExp(`${start}[\\s\\S]*?${end}`, "m");
              const markdown = "\n" + markdownSections.join("\n\n") + "\n";
              content = content.replace(regex, `${start}\n${markdown}${end}`);
              fs.writeFileSync("README.md", content);
            }
            
            // Update index.html with HTML
            if (fs.existsSync("index.html")) {
              let content = fs.readFileSync("index.html", "utf8");
              const start = "<!-- BLOG-POST-LIST:START -->";
              const end = "<!-- BLOG-POST-LIST:END -->";
              const regex = new RegExp(`${start}[\\s\\S]*?${end}`, "m");
              const html = "\n" + htmlSections.join("\n") + "\n";
              content = content.replace(regex, `${start}${html}${end}`);
              fs.writeFileSync("index.html", content);
            }
          })();
          EOF
      - name: Commit & Push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md index.html || true
          git commit -m "üìù Update latest articles" || echo "No changes"
          git push
